// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/google/uuid"
)

type Response interface {
	IsResponse()
}

type Basket struct {
	ID    uuid.UUID     `json:"id"`
	Items []*BasketItem `json:"items"`
}

func (Basket) IsResponse() {}

type CreateBasketItemRequest struct {
	ProductID uuid.UUID `json:"productId"`
	Quantity  uint      `json:"quantity"`
}

type CreateBasketPayload struct {
	Response Response `json:"response,omitempty"`
}

type CreateBasketRequest struct {
	Items []*CreateBasketItemRequest `json:"items"`
}

type Error struct {
	Message string `json:"message"`
	Path    string `json:"path"`
}

type ErrorPayload struct {
	Errors []*Error `json:"errors,omitempty"`
}

func (ErrorPayload) IsResponse() {}

type Mutation struct {
}

type Product struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

func (Product) IsEntity() {}

type Query struct {
}
